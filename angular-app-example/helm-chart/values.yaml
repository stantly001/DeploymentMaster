# Default values for Angular application
# This is a YAML-formatted file.

#------------------------------------------------------------------------------
# Application Settings
#------------------------------------------------------------------------------
application:
  name: angular-app
  version: 1.0.0
  description: "Angular Application for deployment on GKE with Istio service mesh"

#------------------------------------------------------------------------------
# Docker Image Settings
#------------------------------------------------------------------------------
image:
  repository: gcr.io/my-project/angular-app
  tag: latest
  pullPolicy: Always

#------------------------------------------------------------------------------
# Container Configuration
#------------------------------------------------------------------------------
container:
  port: 80
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  
  # Nginx specific settings
  nginx:
    enabled: true
    config:
      clientMaxBodySize: "2m"
      workerConnections: 1024
      keepAliveTimeout: 65
      serverTokens: "off"
      # Additional Nginx configuration can be added here

#------------------------------------------------------------------------------
# Kubernetes Deployment Settings
#------------------------------------------------------------------------------
deployment:
  replicas: 2
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  # Probe settings
  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

  # Pod security context
  securityContext:
    runAsUser: 101
    runAsGroup: 101
    fsGroup: 101

#------------------------------------------------------------------------------
# Horizontal Pod Autoscaler (HPA)
#------------------------------------------------------------------------------
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

#------------------------------------------------------------------------------
# Service Configuration
#------------------------------------------------------------------------------
service:
  type: ClusterIP
  port: 80
  annotations: {}

#------------------------------------------------------------------------------
# Ingress Configuration (if not using Istio)
#------------------------------------------------------------------------------
ingress:
  enabled: false
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: angular-app.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  # - secretName: angular-app-tls
  #   hosts:
  #     - angular-app.example.com

#------------------------------------------------------------------------------
# Istio Integration Settings
#------------------------------------------------------------------------------
istio:
  enabled: true

  # Gateway configuration
  gateway:
    enabled: true
    hosts:
      - "*"  # Default wildcard host
    httpsRedirect: true
    tls:
      enabled: false
      mode: SIMPLE  # SIMPLE, MUTUAL, PASSTHROUGH
      credentialName: "angular-tls-cert"  # Secret containing TLS certificate

  # Virtual Service configuration
  virtualService:
    enabled: true
    hosts:
      - "*"  # Default wildcard host
    gateways:
      - angular-gateway

  # Traffic Management
  trafficManagement:
    # Canary deployments
    canary:
      enabled: false
      header: "x-canary"
      headerValue: "true"
      version: "v2"
    
    # Traffic splitting
    trafficShifting:
      enabled: false
      stableVersion: "v1"
      stableWeight: 90
      canaryVersion: "v2"
      canaryWeight: 10
    
    # Circuit breaker
    circuitBreaker:
      enabled: false
      consecutiveErrors: 5
      interval: "1s"
      baseEjectionTime: "30s"
      maxEjectionPercent: 100
      outlierDetection:
        consecutiveGatewayErrors: 5
        interval: "1s"
        baseEjectionTime: "30s"
        maxEjectionPercent: 100
    
    # Fault injection for testing
    faultInjection:
      enabled: false
      delay:
        percentage: 10
        fixedDelay: "5s"
      abort:
        percentage: 5
        httpStatus: 500
    
    # Request timeouts
    timeout: "10s"
    
    # Retry policy
    retries:
      enabled: false
      attempts: 3
      perTryTimeout: "2s"
      retryOn: "gateway-error,connect-failure,refused-stream"
  
  # Security Settings
  security:
    # Authorization policy
    authorization:
      enabled: false
      rules:
        - from:
            - source:
                principals: ["cluster.local/ns/default/sa/example-service-account"]
          to:
            - operation:
                methods: ["GET"]
                paths: ["/api/v1/*"]
    
    # mTLS settings
    peerAuthentication:
      enabled: false
      mtlsMode: PERMISSIVE  # PERMISSIVE, STRICT, DISABLE
      portLevelMtls: {}
        # 8080: DISABLE

  # Destination Rules for traffic policies
  destinationRule:
    enabled: true
    host: "angular-app"
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
      connectionPool:
        http:
          http1MaxPendingRequests: 100
          maxRequestsPerConnection: 10
        tcp:
          maxConnections: 100
          connectTimeout: "3s"

#------------------------------------------------------------------------------
# GKE Specific Settings
#------------------------------------------------------------------------------
gke:
  enabled: false
  projectId: "my-project"
  clusterName: "angular-cluster"
  region: "us-central1"
  nodeSelectors:
    cloud.google.com/gke-nodepool: "default-pool"

#------------------------------------------------------------------------------
# Environment Variables
#------------------------------------------------------------------------------
env:
  normal:
    - name: NODE_ENV
      value: "production"
    - name: API_URL
      value: "https://api.example.com"
  
  # Secrets (reference to Kubernetes secrets)
  secrets: []
  # - name: API_KEY
  #   secretName: api-secrets
  #   secretKey: api-key

#------------------------------------------------------------------------------
# Configuration Maps
#------------------------------------------------------------------------------
configMaps:
  enabled: false
  data: {}
    # app-config.json: |-
    #   {
    #     "apiUrl": "https://api.example.com",
    #     "features": {
    #       "featureA": true,
    #       "featureB": false
    #     }
    #   }

#------------------------------------------------------------------------------
# Pod Disruption Budget
#------------------------------------------------------------------------------
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  # maxUnavailable: 1

#------------------------------------------------------------------------------
# Monitoring and Logging
#------------------------------------------------------------------------------
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false
    # For Prometheus Operator
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics

#------------------------------------------------------------------------------
# Network Policies
#------------------------------------------------------------------------------
networkPolicy:
  enabled: false
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: istio-ingressgateway
          namespaceSelector:
            matchLabels:
              name: istio-system