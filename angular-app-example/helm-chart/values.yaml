# =====================================================================
# Angular Application Helm Chart Values
# =====================================================================

# -------------------------
# Core Application Settings
# -------------------------
application:
  name: angular-app                   # Name used for k8s resources
  version: 1.0.0                      # Application version

# -------------------------
# Deployment Configuration
# -------------------------
replicaCount: 2                       # Number of pods to run
image:
  repository: gcr.io/your-project/angular-app
  tag: latest                         # Defaults to Chart appVersion if not specified
  pullPolicy: Always                  # Use IfNotPresent for production
nameOverride: ""                      # Override chart name if needed
fullnameOverride: ""                  # Override full name generation

# -------------------------
# Resource Management
# -------------------------
resources:
  # Production recommended minimums
  requests:
    cpu: 100m                         # 0.1 vCPU
    memory: 128Mi                     # 128 MB RAM
  # Resource caps
  limits:
    cpu: 200m                         # 0.2 vCPU
    memory: 256Mi                     # 256 MB RAM

# -------------------------
# Network Configuration
# -------------------------
service:
  type: ClusterIP                     # Use LoadBalancer for direct external access
  port: 80                            # External port
  targetPort: 80                      # Container port
  annotations: {}                     # Service annotations if needed

# Standard Kubernetes Ingress (used when Istio is disabled)
ingress:
  enabled: false                      # Set to true to use standard Kubernetes Ingress
  annotations: {}                     # Optional ingress annotations 
  hosts:
    - host: chart-example.local
      paths: ["/"]
  tls: []                             # TLS configuration for standard ingress

# -------------------------
# Autoscaling Configuration
# -------------------------
autoscaling:
  enabled: true                       # Set to true to enable HPA
  minReplicas: 2                      # Minimum number of pods
  maxReplicas: 10                     # Maximum number of pods
  targetCPUUtilizationPercentage: 80  # Target CPU utilization
  targetMemoryUtilizationPercentage: 80 # Target memory utilization

# -------------------------
# Pod Configuration
# -------------------------
podAnnotations: {}                    # Custom annotations for pods
podSecurityContext: {}                # Pod-level security context
securityContext: {}                   # Container-level security context
nodeSelector: {}                      # Node selection constraints
tolerations: []                       # Pod tolerations
affinity: {}                          # Pod affinity/anti-affinity rules

# -------------------------
# Istio Service Mesh Configuration
# -------------------------
istio:
  enabled: true                       # Set to false to disable all Istio features

  # Gateway configuration (controls ingress traffic)
  gateway:
    hosts:
      - "example.com" 
      - "www.example.com"
    httpsRedirect: true               # Redirect HTTP to HTTPS
    tls:
      enabled: true                   # Enable TLS termination
      mode: SIMPLE                    # Options: SIMPLE, MUTUAL, PASSTHROUGH
      credentialName: angular-tls-cert # Reference to Kubernetes secret with TLS cert

  # Virtual Service (defines routing rules)
  virtualService:
    hosts:
      - "example.com"
      - "www.example.com"
  
  # Traffic Management Configurations
  trafficManagement:
    # Canary Deployment - Route traffic based on headers
    canary:
      enabled: true                   # Enable header-based routing
      header: "x-canary"              # Header name to check
      version: "v2"                   # Target version for canary traffic
      imageTag: ""                    # Image tag for canary (defaults to main tag if empty)
    
    # Traffic Shifting - Weighted routing between versions
    trafficShifting:
      enabled: true                   # Enable percentage-based traffic splitting
      stableVersion: "v1"             # Current stable version
      stableWeight: 90                # Percentage of traffic to stable (0-100)
      canaryVersion: "v2"             # New version being rolled out
      canaryWeight: 10                # Percentage of traffic to canary (0-100)
    
    # Circuit Breaker - Prevent cascading failures
    circuitBreaker:
      enabled: true                   # Enable circuit breaker
      maxConnections: 100             # Maximum connections
      connectTimeout: "30ms"          # Connection timeout
      http1MaxPendingRequests: 1      # Max pending HTTP/1.1 requests
      maxRequestsPerConnection: 1     # Max requests per connection
      maxRetries: 3                   # Maximum retry attempts
      consecutive5xxErrors: 1         # Number of 5xx errors before ejection
      interval: "1s"                  # Interval for checking errors
      baseEjectionTime: "3m"          # Base time for ejection
      maxEjectionPercent: 100         # Maximum percentage of instances to eject
    
    # Fault Injection - Test resilience
    faultInjection:
      enabled: true                   # Enable fault injection for testing
      header: "x-test-fault"          # Header to trigger fault injection
      headerValue: "inject-fault"     # Header value to trigger fault injection
      targetVersion: "v1"             # Version to inject faults into
      delayPercentage: 100.0          # Percentage of requests to delay
      fixedDelay: "5s"                # Fixed delay duration
      abortPercentage: 10.0           # Percentage of requests to abort
      errorCode: 500                  # HTTP error code to return
    
    # Request Timeout Configuration
    timeout: "10s"                    # Default request timeout
    
    # Retry Configuration
    retries:
      attempts: 3                     # Maximum retry attempts
      perTryTimeout: "2s"             # Timeout per retry attempt
      retryOn: "gateway-error,connect-failure,refused-stream" # Conditions to retry

  # Security Configurations
  security:
    # Authorization policies
    authorization:
      enabled: true                   # Enable authorization policy
      action: ALLOW                   # Action: ALLOW, DENY, AUDIT
      rules:
        - from:
            principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
          to:
            methods: ["GET", "POST"]  # HTTP methods to allow
            paths: ["/api/*", "/assets/*", "/*"] # Paths to allow
    
    # Mutual TLS configuration
    peerAuthentication:
      enabled: true                   # Enable mTLS
      mtlsMode: STRICT                # Options: STRICT, PERMISSIVE, DISABLE
      portLevelMtls:                  # Per-port mTLS settings
        8080: PERMISSIVE              # Allow non-TLS traffic on port 8080
  
  # Telemetry and Observability Configuration
  telemetry:
    enabled: true                     # Enable Istio telemetry
    metricsProviders:                 # Metrics collection providers
      - prometheus                    # Enable Prometheus metrics
    metricsOverrides:                 # Metric customization
      - metric: REQUEST_COUNT         # Override for request count metric
        mode: CLIENT_AND_SERVER       # Collect metrics from both client and server
        tagOverrides:
          app: "angular-app"          # Add application tag to metrics
      - metric: REQUEST_DURATION      # Override for latency metric
        mode: CLIENT_AND_SERVER
        tagOverrides:
          app: "angular-app"
    tracing:                          # Distributed tracing configuration
      providers:
        - zipkin                      # Enable Zipkin tracing
      samplingRate: 100.0             # Percentage of requests to sample
    accessLogging:                    # Access logging configuration
      providers:
        - envoy                       # Use Envoy for access logs