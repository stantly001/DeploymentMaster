apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.name }}
  labels:
    app: {{ .Values.application.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.application.name }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    {{- if eq .Values.deployment.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.application.name }}
        {{- with .Values.deployment.pod.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.deployment.pod.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.deployment.pod.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.application.name }}
        image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag }}"
        imagePullPolicy: {{ .Values.container.image.pullPolicy }}
        ports:
        {{- range .Values.service.ports }}
        - name: {{ .name }}
          containerPort: {{ .targetPort }}
          protocol: {{ .protocol }}
        {{- end }}
        {{- if .Values.container.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.container.livenessProbe.path }}
            port: {{ .Values.container.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.container.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.container.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.container.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.container.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.container.livenessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.container.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.container.readinessProbe.path }}
            port: {{ .Values.container.readinessProbe.port }}
          initialDelaySeconds: {{ .Values.container.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.container.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.container.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.container.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.container.readinessProbe.successThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.container.resources | nindent 10 }}
        volumeMounts:
        {{- toYaml .Values.volumeMounts | nindent 8 }}
      volumes:
      {{- toYaml .Values.volumes | nindent 6 }}